{"version":3,"file":"static/js/665.6aca564b.chunk.js","mappings":"4LAEaA,E,QAAeC,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kF,6ICCzBC,EAAOH,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMlBE,EAAQJ,EAAAA,EAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kIASpBI,EAAQN,EAAAA,EAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4TAqBpBM,EAASR,EAAAA,EAAAA,OAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2jBA2BtBQ,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAeY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0H,oBCOzC,EAlEqB,WACnB,IAAMW,GAAWC,EAAAA,EAAAA,MAwBjB,OACEC,EAAAA,EAAAA,MAACZ,EAAI,CAACa,SAvBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKV,KAAI,aACnD,IACCW,OAAM,WACLH,EAAAA,OAAAA,QAAe,2BACjB,IAEFX,EAAKe,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9CrB,EAAAA,EAAAA,MAACX,EAAK,CAAAgC,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAAC/B,EAAK,CACJgC,KAAK,OACLhB,KAAK,OAELiB,MAAM,yIACNC,YAAY,iBACZC,UAAQ,QAGZ1B,EAAAA,EAAAA,MAACX,EAAK,CAAAgC,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC/B,EAAK,CACJgC,KAAK,QACLhB,KAAK,QAELiB,MAAM,oLACNC,YAAY,kBACZC,UAAQ,QAGZ1B,EAAAA,EAAAA,MAACX,EAAK,CAAAgC,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC/B,EAAK,CACJgC,KAAK,WACLhB,KAAK,WAELiB,MAAM,wJACNC,YAAY,qBACZC,UAAQ,QAGZJ,EAAAA,EAAAA,KAAC7B,EAAM,CAAC8B,KAAK,SAAQF,SAAC,cACtBC,EAAAA,EAAAA,KAAC3B,EAAU,CAACgC,GAAG,SAAQN,SAAC,yBAG9B,EC5DA,EARiB,WACf,OACEC,EAAAA,EAAAA,KAACtC,EAAAA,EAAY,CAAAqC,UACXC,EAAAA,EAAAA,KAACM,EAAY,KAGnB,C","sources":["Pages/Login/Login.Styled.jsx","components/RegisterForm/RegisterPage.styled.jsx","components/RegisterForm/RegisterForm.jsx","Pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrapperLogin = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  background-color: #a59cd3;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n\n  :placeholder {\n    color: #757575;\n  }\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 1px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 18px;\n\n  margin-top: 24px;\n  padding: 1.063em 1.5em;\n\n  background-color: cyan;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: orange;\n    border: 1px solid #000000;\n  }\n`;\n\nexport const LoggedLink = styled(NavLink)`\n  margin-top: 8px;\n  color: #8f8f8f;\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #fabb18;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { register } from 'redux/auth/operations';\n\nimport { Form, Input, Label, Button, LoggedLink } from './RegisterPage.styled';\nimport { Notify } from 'notiflix';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome!`);\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          // pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          placeholder=\"Enter email ...\"\n          required\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          // pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          placeholder=\"Enter password ...\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n      <LoggedLink to=\"/login\">Have acount? LogIn</LoggedLink>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import { WrapperLogin } from 'Pages/Login/Login.Styled';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <WrapperLogin>\n      <RegisterForm />\n    </WrapperLogin>\n  );\n};\n\nexport default Register;\n"],"names":["WrapperLogin","styled","_templateObject","_taggedTemplateLiteral","Form","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","LoggedLink","NavLink","_templateObject5","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","then","originalPromiseResult","Notify","concat","user","catch","reset","autoComplete","children","_jsx","type","title","placeholder","required","to","RegisterForm"],"sourceRoot":""}