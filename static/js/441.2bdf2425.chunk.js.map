{"version":3,"file":"static/js/441.2bdf2425.chunk.js","mappings":"gPAwEA,EAlEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAwBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAvBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKV,KAAI,aACnD,IACCW,OAAM,WACLH,EAAAA,OAAAA,QAAe,2BACjB,IAEFX,EAAKe,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9CrB,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,QAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNC,YAAY,iBACZC,UAAQ,QAGZ3B,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLhB,KAAK,QACLiB,QAAQ,2EACRC,MAAM,oLACNC,YAAY,kBACZC,UAAQ,QAGZ3B,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLhB,KAAK,WACLiB,QAAQ,2CACRC,MAAM,wJACNC,YAAY,qBACZC,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,cACtBC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAG,SAAQR,SAAC,yBAG3B,EChEA,EAJiB,WACf,OAAOC,EAAAA,EAAAA,KAACQ,EAAY,GACtB,C","sources":["components/RegisterForm/RegisterForm.jsx","Pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\n\nimport { Notify } from 'notiflix';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome!`);\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name ...\"\n          required\n        />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          placeholder=\"Enter email ...\"\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          placeholder=\"Enter password ...\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n      <NavLink to=\"/login\">Have acount? LogIn</NavLink>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","then","originalPromiseResult","Notify","concat","user","catch","reset","autoComplete","children","_jsx","type","pattern","title","placeholder","required","NavLink","to","RegisterForm"],"sourceRoot":""}