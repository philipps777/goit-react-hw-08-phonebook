{"version":3,"file":"static/js/701.13f9d8ba.chunk.js","mappings":"gPA2DA,EAtDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAtBa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKC,KAAI,kBACnD,IACCC,OAAM,WACLJ,EAAAA,OAAAA,QAAe,8BACjB,IAEFV,EAAKe,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9CrB,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLN,KAAK,QACLO,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,wBAGhB3B,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLN,KAAK,WACLO,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,2BAGhBL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,WACtBC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAG,YAAWR,SAAC,kCAG9B,ECnDA,EAJc,WACZ,OAAOC,EAAAA,EAAAA,KAACQ,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n        />\n      </label>\n      <button type=\"submit\">LogIn</button>\n      <NavLink to=\"/register\">Don`t have acount? Register</NavLink>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","concat","user","name","catch","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","NavLink","to","LoginForm"],"sourceRoot":""}