{"version":3,"file":"static/js/275.60c72056.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-direction: column;\n  padding: 50px;\n`;\nexport const FormWrapper = styled.div`\n  box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72);\n  -webkit-box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72);\n  -moz-box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72);\n  border-radius: 25px;\n`;\nexport const Button = styled.button`\n  display: inline-flex;\n  padding: 5px 7px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-family: inherit;\n  font-size: 14px;\n  background-color: cyan;\n  color: black;\n  cursor: pointer;\n  &:hover {\n    background-color: orange;\n  }\n`;\nexport const Input = styled.input`\n  padding: 8px 12px;\n  border: 3px solid #ccc;\n  border-radius: 4px;\n  font-family: inherit;\n  font-size: 16px;\n  color: #333;\n  transition: border-color 0.3s, box-shadow 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: orange;\n    box-shadow: 0 0 5px rgba(102, 175, 233, 0.5);\n  }\n`;\n","\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\nimport { Notify } from 'notiflix';\nimport { Form, FormWrapper, Button, Input } from './ContactForm.styled';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n    if (contacts.some(({ phone }) => phone === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, phone: formNumber }));\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <FormWrapper>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={contacts.phone}\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </FormWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\n\nimport { Input } from 'components/ContactForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter contact name\"\n      value={filter}\n      onChange={handleChangeFilter}\n    />\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72) inset;\n  -webkit-box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72) inset;\n  -moz-box-shadow: 1px 0px 22px 10px rgba(0, 0, 0, 0.72) inset;\n  border-radius: 25px;\n  padding: 32px;\n`;\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ButtonList = styled.button`\n  display: inline-flex;\n  padding: 3px 4px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-family: inherit;\n  font-size: 12px;\n  background-color: cyan;\n  color: black;\n  cursor: pointer;\n  &:hover {\n    background-color: orange;\n  }\n`;\nexport const Phone = styled.span`\n  margin-right: 10px;\n  margin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/constacts/operations';\n\nimport { Li, ButtonList, Phone } from './ContactList.styled';\nimport { Notify } from 'notiflix';\nexport const ContactItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <Li key={id}>\n      {name}:<Phone>{phone}</Phone>\n      <ButtonList onClick={() => handleDeleteContact(id)}>Delete</ButtonList>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/constacts/selectors';\n\nimport { List } from './ContactList.styled';\n\nimport { ContactItem } from './ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(({ name, phone, id }) => (\n        <ContactItem key={id} id={id} name={name} phone={phone} />\n      ))}\n    </List>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaUserPlus } from 'react-icons/fa';\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <div>\n      <Section>\n        <div>\n          <h2>Contacts</h2>\n          <div>\n            <Filter />\n            <button type=\"button\" onClick={handleOpenModal}>\n              <FaUserPlus />\n              New Contact\n            </button>\n          </div>\n        </div>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Form","styled","_templateObject","_taggedTemplateLiteral","FormWrapper","_templateObject2","Button","_templateObject3","Input","_templateObject4","ContactForm","_ref","onCloseModal","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","phone","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","type","pattern","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","List","Li","ButtonList","Phone","ContactItem","id","onClick","userId","deleteContact","ContactList","visibleContacts","contact","includes","map","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","_useState","useState","_useState2","_slicedToArray","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","FaUserPlus"],"sourceRoot":""}